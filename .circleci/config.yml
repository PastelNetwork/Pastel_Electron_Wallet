version: 2.1

jobs:
  install-deps:
    docker:
      - image: electronuserland/builder:14
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_deps-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: node_deps-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  lint-and-test:
    docker:
      - image: electronuserland/builder:14
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: check code follow standard
          command: yarn check-all
      - run:
          name: tests
          command: yarn test
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build-ubuntu:
    docker:
      - image: electronuserland/builder:14
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: install dpkg and fakeroot
          command: |
            apt-get update -y
            apt-get install -y dpkg fakeroot
      - run:
          name: generate builds
          command: yarn make
      - store_artifacts:
          path: ~/project/out/make
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build-windows:
    docker:
      - image: electronuserland/builder:wine-mono-05.21
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: reconfigure wine for x64
          command: rm -rf /root/.wine && winecfg
      - run:
          name: generate builds
          command: yarn make --platform=win32
      - store_artifacts:
          path: ~/project/out/make/squirrel.windows/x64

  build_macos:
    macos:
      xcode: "11.4.1"
    steps:
      - run: security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
      - run: security default-keychain -s build.keychain
      - run: security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
      - run: echo $KEYSTORE | base64 --decode - > keystore.p12
      - run: security import keystore.p12 -k build.keychain -P $KEYCHAIN_PASSWORD -T /usr/bin/codesign
      - run: yarn make

workflows:
  lint-test-package:
    jobs:
      - install-deps
      - lint-and-test:
          requires:
            - install-deps
      - build-ubuntu:
          filters: &filters-build
            branches:
              only:
                - /release.*/
          requires:
            - lint-and-test
      - build-windows:
          filters:
            <<: *filters-build
          requires:
            - lint-and-test
      - build-macos:
          context: Release
          requires:
            - lint-and-test
